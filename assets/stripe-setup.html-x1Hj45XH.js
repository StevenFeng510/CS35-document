import{_ as e,c as o,a as s,o as n}from"./app-5nxLNYCg.js";const i="/CS35-document/assets/Product_catalog-C82roqLW.png",r="/CS35-document/assets/Add_product_page-BDLyWunr.png",a="/CS35-document/assets/Add_prices-Bx6DPJnb.png",l="/CS35-document/assets/Add_more_products-BSI4RLhz.png",c="/CS35-document/assets/Product-C1fzjBeG.png",p="/CS35-document/assets/Price_ID-BIEFuBKP.png",h="/CS35-document/assets/Stripe_dashboard-CVqIo1y9.png",d="/CS35-document/assets/Webhook-CIiTvyb3.png",u="/CS35-document/assets/Confirm_variables-ChTo1X14.png",g={};function m(b,t){return n(),o("div",null,t[0]||(t[0]=[s('<h1 id="instructions-for-setting-up-stripe" tabindex="-1"><a class="header-anchor" href="#instructions-for-setting-up-stripe"><span>Instructions for setting up stripe</span></a></h1><p>Stripe is the payment system integrated in our project. Its official site can be accessed <a href="https://stripe.com/au" target="_blank" rel="noopener noreferrer">here</a>. Please follow these instructions after the deployment of the application on Azure. It is normal that the application does not run normally just yet. Once these instructions are successfully followed, the application will function properly.</p><p>An important note, please ensure the correctness of weekly, monthly and yearly price IDs, the Stripe API key and the webhook endpoint secret when added them to the environment variables in the Azure APP.</p><h2 id="_1-steps-to-setup-stripe" tabindex="-1"><a class="header-anchor" href="#_1-steps-to-setup-stripe"><span>1. Steps to setup Stripe</span></a></h2><ol><li>Go to Stripe&#39;s website to create an account. You should automatically receive test access. The developers dashboard can be found by clicking the <strong>Dashboard</strong> button in the top-right.</li><li>Click on <strong>Product catalog</strong>, as shown in the screenshot below. Click on <strong>Create product</strong> to add a product. This is where you add the products, i.e., the price for weekly, monthly and yearly subscriptions.</li></ol><br><img src="'+i+'" alt="Image" style="display:block;margin:auto;width:80%;height:auto;"><br><ol start="3"><li>Give the product a descriptive name. Click on <strong>More pricing options</strong>, as shown in the screenshot below.</li></ol><br><img src="'+r+'" alt="Image" style="display:block;margin:auto;width:80%;height:auto;"><br><p>This leads you to the overlay shown below. Make sure <strong>Recurring</strong> and <strong>Flat rate</strong> are selected. These should be the default options, but just check them to be safe. Enter an amount, i.e. price. Click <strong>Next</strong> to save this product. You can refer to the screenshot below.</p><br><img src="'+a+'" alt="Image" style="display:block;margin:auto;width:80%;height:auto;"><br><p>Repeat this process for weekly, monthly and yearly prices, by clicking on <strong>+ Add another price</strong>. Finally click on <strong>Add product</strong> to save your operations.</p><br><img src="'+l+'" alt="Image" style="display:block;margin:auto;width:80%;height:auto;"><br><ol start="4"><li>You should now see a product in your product catalog, with the name that you specified. Click on it to see the product details.</li></ol><br><img src="'+c+'" alt="Image" style="display:block;margin:auto;width:80%;height:auto;"><br><ol start="5"><li>For each of the items, click on it to go to its detail page, and copy the price ID in the top-right corner. Refer to the screenshot below to find the price ID. These price IDs should be added to the respective environment variables through the Azure dashboard, i.e. weekly price ID under <strong>WEEKLY_PRICE</strong>, monthly price ID under <strong>MONTHLY_PRICE</strong> and yearly price ID under <strong>ANNUALLY_PRICE</strong>. Remember to click on <strong>Apply</strong> to save the environment variables.</li></ol><br><img src="'+p+'" alt="Image" style="display:block;margin:auto;width:80%;height:auto;"><br><h2 id="_2-steps-to-connect-stripe-with-azure-application" tabindex="-1"><a class="header-anchor" href="#_2-steps-to-connect-stripe-with-azure-application"><span>2. Steps to connect Stripe with Azure application</span></a></h2><ol><li>With the created account, go to the developer dashboard where you will obtain an <strong>API key</strong>. The API key will be hidden at first, so click on the button to reveal it. This is how Stripe authenticates the requests sent from the backend of our application to be legitimate. Note this down to be used as an environment variable in Azure. Go back to your application&#39;s dashboard in Azure and go to the <strong>Environment Variables</strong> page under <strong>Settings</strong>. Click on the <strong>STRIPE_API_KEY</strong> variable and paste in the API key that you&#39;ve just obtained from Stripe. Click on <strong>Apply</strong> to save it.</li></ol><br><img src="'+h+'" alt="Image" style="display:block;margin:auto;width:80%;height:auto;"><br><ol start="2"><li>You would&#39;ve deployed the application on Azure by now, so you will have a public domain for the service. With the public domain, go to the <strong>&quot;Developers&quot;</strong> option in Stripe, where you will find a tab called <strong>Webhooks</strong>. Click on <strong>Create new endpoint</strong>. Select <strong>Your account</strong> and <strong>Select all events</strong> (we don&#39;t need all events to function, but this is easier to describe and follow). Click on <strong>Continue</strong> and add the application&#39;s public domain along with the route for the webhook. The final url should look like this: <code>https://&lt;public domain&gt;/api/v1/stripe/stripe_webhook</code>. Click on &quot;Create destination&quot;. The webhook endpoint is now added to Stripe.</li><li>Once the webhook endpoint is added, you will see it listed in the dashboard under the <strong>Webhooks</strong> tab. Click on it, and you will see a line of text saying <strong>Signing secret</strong>. Click on <strong>Reveal</strong> to see a string starting with &quot;whsec&quot;. This will be the webhook secret to use. Go to the <strong>Environment Variables</strong> page and replace the value under <strong>WEBHOOK_ENDPOINT_SECRET</strong> with the webhook secret. Remember to click <strong>Apply</strong> to save the variable.</li></ol><br><img src="'+d+'" alt="Image" style="display:block;margin:auto;width:80%;height:auto;"><br><ol start="4"><li>You have now successfully set all of the environment variables. Click on <strong>Apply</strong> on the page to save all the changes, and click <strong>Confirm</strong> to restart the application.</li></ol><br><img src="'+u+'" alt="Image" style="display:block;margin:auto;width:80%;height:auto;"><br>',41)]))}const w=e(g,[["render",m],["__file","stripe-setup.html.vue"]]),k=JSON.parse('{"path":"/stripe/stripe-setup/stripe-setup.html","title":"Instructions for setting up stripe","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1. Steps to setup Stripe","slug":"_1-steps-to-setup-stripe","link":"#_1-steps-to-setup-stripe","children":[]},{"level":2,"title":"2. Steps to connect Stripe with Azure application","slug":"_2-steps-to-connect-stripe-with-azure-application","link":"#_2-steps-to-connect-stripe-with-azure-application","children":[]}],"git":{"updatedTime":1730111043000,"contributors":[{"name":"Bryan","email":"zihe2003@uni.sydney.edu.au","commits":1},{"name":"StevenFeng","email":"StevenFeng1020@outlook.com","commits":1}]},"filePathRelative":"stripe/stripe-setup/stripe-setup.md"}');export{w as comp,k as data};
