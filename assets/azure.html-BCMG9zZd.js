import{_ as r,c as o,a as s,b as a,d as n,e as i,f as l,r as p,o as c}from"./app-5nxLNYCg.js";const u="/CS35-document/assets/acr-DxQBL1Bu.png",d="/CS35-document/assets/webapp-B8cL2zTh.png",g={};function h(m,e){const t=p("RouteLink");return c(),o("div",null,[e[8]||(e[8]=s('<h2 id="steps-to-deploy-your-project-using-docker-and-azure" tabindex="-1"><a class="header-anchor" href="#steps-to-deploy-your-project-using-docker-and-azure"><span>Steps to Deploy Your Project Using Docker and Azure</span></a></h2><h3 id="_1-abstract" tabindex="-1"><a class="header-anchor" href="#_1-abstract"><span>1. Abstract</span></a></h3><p>This project will use Docker to package a local application into a containerized environment, which enables smooth deployment to Azure. The application image is built locally, uploaded to the Azure Container Registry, and then deployed using Azure App Service, where environment variables are configured to ensure full functionality, including Stripe payment processing.</p><h3 id="_2-build-the-local-docker-image" tabindex="-1"><a class="header-anchor" href="#_2-build-the-local-docker-image"><span>2. Build the Local Docker Image</span></a></h3><ul><li><strong>Navigate to the directory containing your <code>Dockerfile</code> and run</strong></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> build <span class="token parameter variable">-t</span> <span class="token variable"><span class="token variable">`</span>your-image-name<span class="token variable">`</span></span> <span class="token builtin class-name">.</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This command creates a Docker image that contains all necessary dependencies and configurations specified in the <code>Dockerfile</code>.</p><ul><li><strong>Run the Docker Container</strong></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token variable"><span class="token variable">`</span>host-port<span class="token variable">`</span></span><span class="token builtin class-name">:</span> <span class="token variable"><span class="token variable">`</span>container-port<span class="token variable">`</span></span> <span class="token parameter variable">--name</span> <span class="token variable"><span class="token variable">`</span>your-container-name<span class="token variable">`</span></span> <span class="token variable"><span class="token variable">`</span>your-image-name<span class="token variable">`</span></span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Access the application</strong></li></ul><p>Open your browser and visit <code>http://localhost:&lt;host-port&gt;</code> to ensure the application is running successfully. The Stripe functionality may not be fully operational locally due to the absence of configured environment variables. It can be configured in the Azure environment instead in the next steps.</p><p>Our team also uploads the image to Docker Hub, which can be directly downloaded using the command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> pull yiqinghu/capstone1016new:v1</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This allows collaborators or other environments to deploy the application without rebuilding the image locally.</p><h3 id="_3-create-azure-container-registry" tabindex="-1"><a class="header-anchor" href="#_3-create-azure-container-registry"><span>3. Create Azure Container Registry</span></a></h3><p>Creating an Azure Container Registry (ACR) will allow you to store and manage Docker images for deployment in Azure services.</p><ul><li><p><strong>Log in to the Azure Portal.</strong></p></li><li><p><strong>Select Create Resource &gt; Containers &gt; Container Registry.</strong></p></li></ul><p><img src="'+u+`" alt=""></p><ul><li><strong>Configure the Registry Details</strong></li></ul><p>Fill in the registry’s information:</p><ol><li><p><strong>Subscription</strong>: Choose the subscription where you want the registry to be billed.</p></li><li><p><strong>Resource Group</strong>: Either select an existing group or create a new one.</p></li><li><p><strong>Registry Name</strong>: Provide a unique name for your registry.</p></li><li><p><strong>Location</strong>: Select the closest or most suitable region for your use.</p></li></ol><ul><li><strong>Install Azure CLI</strong></li></ul><p>If you haven’t installed Azure CLI yet, you can follow the <a href="https://learn.microsoft.com/zh-cn/cli/azure/install-azure-cli" target="_blank" rel="noopener noreferrer">installation guide</a>. Login to Azure Container Registry: Open your command line interface and run:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">az acr login <span class="token parameter variable">--name</span> <span class="token operator">&lt;</span>your-acr-name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><h5 id="tag-and-push-docker-image" tabindex="-1"><a class="header-anchor" href="#tag-and-push-docker-image"><span><strong>Tag and Push Docker Image</strong></span></a></h5></li></ul><p>Tag your local Docker image and push it to your Azure Container Registry with the following commands:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> tag <span class="token operator">&lt;</span>local-image-name<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>tag<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>your-acr-name<span class="token operator">&gt;</span>.azurecr.io/<span class="token operator">&lt;</span>image-name<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>tag<span class="token operator">&gt;</span></span>
<span class="line"><span class="token function">docker</span> push <span class="token operator">&lt;</span>your-acr-name<span class="token operator">&gt;</span>.azurecr.io/<span class="token operator">&lt;</span>image-name<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>tag<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>This pushes your local Docker image to the remote Azure Container Registry. Adjust the local and remote names accordingly; the push process might take some time. After this, your image will be accessible in your Azure Container Registry, ready for deployment in other Azure services such as App Service</p><h3 id="_4-deploy-using-azure-app-service" tabindex="-1"><a class="header-anchor" href="#_4-deploy-using-azure-app-service"><span>4. Deploy Using Azure App Service</span></a></h3><ul><li><p><strong>Log in to the Azure Portal.</strong></p></li><li><p><strong>Create an Azure App Service instance and select your container image that you have just uploaded.</strong></p></li></ul><p><img src="`+d+'" alt=".."></p><ul><li><p><strong>Ensure that the corresponding port is set for public access.</strong></p></li><li><p><strong>Once deployment is complete, you can access your application via the URL provided by Azure.</strong></p></li></ul><h3 id="_5-environment-variables-settings" tabindex="-1"><a class="header-anchor" href="#_5-environment-variables-settings"><span>5. Environment Variables Settings</span></a></h3>',33)),a("ul",null,[a("li",null,[a("p",null,[e[1]||(e[1]=n("Some environment variables need to be set, such as ")),e[2]||(e[2]=a("code",null,"WEBHOOK_ENDPOINT_SECRET",-1)),e[3]||(e[3]=n(" and ")),e[4]||(e[4]=a("code",null,"STRIPE_API_KEY",-1)),e[5]||(e[5]=n(". You can refer to the relevant Stripe ")),i(t,{to:"/stripe/stripe-setup/stripe-setup.html"},{default:l(()=>e[0]||(e[0]=[n("Documentation")])),_:1}),e[6]||(e[6]=n(" for instructions on how to set these."))])]),e[7]||(e[7]=s("<li><p>The <code>DATABASE_URL</code> should contain the information for the database you have deployed.</p></li><li><p>The <code>CHECKOUT_SUCCESS_URL</code> is the page to which users will be redirected after a successful payment, specifically the URL of your deployed application.</p></li><li><p>The <code>WEEKLY_PRICE</code>, <code>MONTHLY_PRICE</code>, and <code>ANNUALLY_PRICE</code> is the price ID automatically generated when creating products and prices in the Stripe Dashboard.</p></li>",3))])])}const b=r(g,[["render",h],["__file","azure.html.vue"]]),y=JSON.parse('{"path":"/deployment/azure/azure.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Steps to Deploy Your Project Using Docker and Azure","slug":"steps-to-deploy-your-project-using-docker-and-azure","link":"#steps-to-deploy-your-project-using-docker-and-azure","children":[{"level":3,"title":"1. Abstract","slug":"_1-abstract","link":"#_1-abstract","children":[]},{"level":3,"title":"2. Build the Local Docker Image","slug":"_2-build-the-local-docker-image","link":"#_2-build-the-local-docker-image","children":[]},{"level":3,"title":"3. Create Azure Container Registry","slug":"_3-create-azure-container-registry","link":"#_3-create-azure-container-registry","children":[]},{"level":3,"title":"4. Deploy Using Azure App Service","slug":"_4-deploy-using-azure-app-service","link":"#_4-deploy-using-azure-app-service","children":[]},{"level":3,"title":"5. Environment Variables Settings","slug":"_5-environment-variables-settings","link":"#_5-environment-variables-settings","children":[]}]}],"git":{"updatedTime":1730103217000,"contributors":[{"name":"StevenFeng","email":"StevenFeng1020@outlook.com","commits":1},{"name":"hyq-manu","email":"1276502818@qq.com","commits":1}]},"filePathRelative":"deployment/azure/azure.md"}');export{b as comp,y as data};
